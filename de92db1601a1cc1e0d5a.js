import"./style.css";import editIcon from"../assets/pencil-outline.svg";import{Project,addNewProject,editProject,removeProject}from"./project.js";import{Task,addTask,editTask,removeTask,removeCompleted,toggleComplete,toggleStar}from"./task.js";const projectList=null===localStorage.getItem("projectList")?[]:JSON.parse(localStorage.getItem("projectList"));0===projectList.length&&(addNewProject(projectList,"General"),localStorage.setItem("projectList",JSON.stringify(projectList)));let currentProjectIndex=0;const backdrop=document.querySelector(".backdrop"),modal=document.querySelector(".modal"),open=document.querySelector("#open");function openModal(){backdrop.style.display="block",modal.classList.add("open-modal")}function closeModal(){document.querySelector("#projectName").value="",backdrop.style.display="none",modal.classList.remove("open-modal")}function renderProjectList(){const e=document.querySelector(".projectList");for(;e.firstChild;)e.removeChild(e.lastChild);document.querySelector(".activeProjectName").innerHTML=projectList[currentProjectIndex].projectName;let t=0;projectList.forEach((o=>{const c=document.createElement("div");c.classList.add("projectElement");const a=document.createElement("div");a.classList.add("projectItemHeading"),a.innerHTML=o.projectName,a.setAttribute("data-projectindex",t),a.addEventListener("click",changeProject);const r=document.createElement("div");r.classList.add("editProjectButton"),r.innerHTML=`<img src=${editIcon} data-projectindex=${t}>`,r.addEventListener("click",updateProject);const n=document.createElement("div");n.classList.add("deleteProjectButton"),n.innerHTML=`<span data-projectindex=${t}>&times;</span>`,n.addEventListener("click",deleteProject),c.appendChild(a),c.appendChild(r),c.appendChild(n),c.setAttribute("data-projectindex",t),e.appendChild(c),t++})),document.querySelectorAll(".projectItemHeading")[currentProjectIndex].classList.toggle("active")}function changeProject(e){const t=document.querySelectorAll(".projectItemHeading"),o=e.srcElement.dataset.projectindex;currentProjectIndex!==o&&(t[currentProjectIndex].classList.toggle("active"),currentProjectIndex=o,document.querySelector(".activeProjectName").innerHTML=projectList[currentProjectIndex].projectName,t[currentProjectIndex].classList.toggle("active"),renderTaskList())}function updateProject(e){openProjectModalFunction(e.srcElement.dataset.projectindex)}function deleteProject(e){removeProject(projectList,e.srcElement.dataset.projectindex),localStorage.setItem("projectList",JSON.stringify(projectList)),Number(currentProjectIndex)===Number(e.srcElement.dataset.projectindex)&&(currentProjectIndex=0,renderTaskList()),renderProjectList()}close=document.querySelector("#close"),open.addEventListener("click",openModal),close.addEventListener("click",closeModal),backdrop.addEventListener("click",closeModal),renderProjectList(),renderTaskList();const submit=document.querySelector("#submit");function handleSubmit(e){e.preventDefault();const t=document.querySelector("#form"),o=t.checkValidity();if(t.reportValidity(),o){const e=document.querySelector("#projectName").value;closeModal(),addNewProject(projectList,e),localStorage.setItem("projectList",JSON.stringify(projectList)),1!==projectList.length&&(currentProjectIndex+=1),renderProjectList(),renderTaskList()}}submit.addEventListener("click",handleSubmit);const updateBackdrop=document.querySelector(".updateBackdrop"),updateProjectModal=document.querySelector(".updateProjectModal"),closeProjectModal=document.querySelector("#closeUpdateProject");function openProjectModalFunction(e){updateBackdrop.style.display="block",updateProjectModal.classList.add("open-modal"),document.querySelector("#newProjectName").value=projectList[e].projectName,document.querySelector("#updateProject").setAttribute("data-projectindex",e)}function closeProjectModalFunction(){document.querySelector("#newProjectName").value="",updateBackdrop.style.display="none",updateProjectModal.classList.remove("open-modal")}closeProjectModal.addEventListener("click",closeProjectModalFunction),updateBackdrop.addEventListener("click",closeProjectModalFunction);const update=document.querySelector("#updateProject");function handleUpdate(e){e.preventDefault();const t=document.querySelector("#updateProjectForm"),o=t.checkValidity();if(t.reportValidity(),o){const t=document.querySelector("#newProjectName").value,o=e.srcElement.dataset.projectindex;editProject(projectList,o,t),localStorage.setItem("projectList",JSON.stringify(projectList)),renderProjectList(),closeProjectModalFunction()}}function renderTaskList(){const e=document.querySelector(".taskList");for(;e.firstChild;)e.removeChild(e.lastChild);if(0===projectList.length)e.innerHTML='<div class="warning">Add a project to continue</div>';else if(0===projectList[currentProjectIndex].projectTasks.length)e.innerHTML='<div class="warning">No Tasks in this Project</div>';else{let t=0;projectList[currentProjectIndex].projectTasks.forEach((o=>{const c=document.createElement("div");c.classList.add("taskUI");const a=document.createElement("div");a.classList.add("taskHeader"),a.innerHTML=o.taskTitle,c.appendChild(a);const r=document.createElement("div");r.classList.add("taskContent"),[["Description",0===o.taskDescription.length?"No Description":o.taskDescription],["Start Date",o.taskStartDate],["Due Date",o.taskDueDate],["Priority",o.taskPriority],["Completed?",o.isCompleted?"Yes":"No"]].forEach((e=>{const t=document.createElement("div");t.classList.add("contentRow");const o=document.createElement("div");o.classList.add("rowTitle"),o.innerHTML=e[0];const c=document.createElement("div");c.classList.add("rowContent"),c.innerHTML=e[1],t.appendChild(o),t.appendChild(c),r.appendChild(t)})),c.appendChild(r);const n=document.createElement("div");n.classList.add("taskControls");const d=document.createElement("button");d.classList.add("complete"),d.innerHTML=o.isCompleted?"INCOMPLETE":"COMPLETE",d.setAttribute("data-taskindex",t),d.addEventListener("click",completeTask);const s=document.createElement("button");s.classList.add("edit"),s.innerHTML="EDIT",s.setAttribute("data-taskindex",t),s.addEventListener("click",handleEdit);const i=document.createElement("button");i.classList.add("delete"),i.innerHTML="DELETE",i.setAttribute("data-taskindex",t),i.addEventListener("click",deleteTask),n.appendChild(d),n.appendChild(s),n.appendChild(i),c.appendChild(n),e.appendChild(c),t++}))}}function completeTask(e){let t=e.srcElement.dataset.taskindex;toggleComplete(projectList[currentProjectIndex].projectTasks,t),localStorage.setItem("projectList",JSON.stringify(projectList)),renderTaskList()}function handleEdit(e){openUpdateTaskModalFunction(e.srcElement.dataset.taskindex)}function deleteTask(e){let t=e.srcElement.dataset.taskindex;removeTask(projectList[currentProjectIndex].projectTasks,t),localStorage.setItem("projectList",JSON.stringify(projectList)),renderTaskList()}update.addEventListener("click",handleUpdate);const newTaskBackdrop=document.querySelector(".newTaskBackdrop"),newTaskModal=document.querySelector(".newTaskModal"),openNewTask=document.querySelector("#openNewTask"),closeNewTask=document.querySelector("#closeNewTask");function openNewTaskModalFunction(){document.querySelector("#dueDate").setAttribute("min",(new Date).toISOString().split("T")[0]),newTaskBackdrop.style.display="block",newTaskModal.classList.add("open-modal")}function closeNewTaskModalFunction(){document.querySelector("#newTaskName").value="",document.querySelector("#description").value="",document.querySelector("#dueDate").value="",document.querySelector("#priority").value="Low",newTaskBackdrop.style.display="none",newTaskModal.classList.remove("open-modal")}openNewTask.addEventListener("click",openNewTaskModalFunction),closeNewTask.addEventListener("click",closeNewTaskModalFunction),newTaskBackdrop.addEventListener("click",closeNewTaskModalFunction);const add=document.querySelector("#addTask");function handleAddTask(e){e.preventDefault();const t=document.querySelector("#newTaskForm"),o=t.checkValidity();if(t.reportValidity(),o){const e=document.querySelector("#newTaskName").value,t=document.querySelector("#description").value,o=document.querySelector("#dueDate").value,c=document.querySelector("#priority").value;closeNewTaskModalFunction(),addTask(projectList[currentProjectIndex].projectTasks,e,t,(new Date).toISOString().split("T")[0],o,c),localStorage.setItem("projectList",JSON.stringify(projectList)),renderTaskList()}}add.addEventListener("click",handleAddTask);const updateTaskBackdrop=document.querySelector(".updateTaskBackdrop"),updateTaskModal=document.querySelector(".updateTaskModal"),closeUpdateTask=document.querySelector("#closeUpdateTask");function openUpdateTaskModalFunction(e){document.querySelector("#updateTaskDueDate").setAttribute("min",(new Date).toISOString().split("T")[0]),updateTaskBackdrop.style.display="block",updateTaskModal.classList.add("open-modal"),document.querySelector("#updateTaskName").value=projectList[currentProjectIndex].projectTasks[e].taskTitle,document.querySelector("#updateTaskDescription").value=projectList[currentProjectIndex].projectTasks[e].taskDescription,document.querySelector("#updateTaskDueDate").value=projectList[currentProjectIndex].projectTasks[e].taskDueDate,document.querySelector("#updateTaskPriority").value=projectList[currentProjectIndex].projectTasks[e].taskPriority,document.querySelector("#updateTask").setAttribute("data-taskindex",e)}function closeUpdateTaskModalFunction(){document.querySelector("#updateTaskName").value="",document.querySelector("#updateTaskDescription").value="",document.querySelector("#updateTaskDueDate").value="",document.querySelector("#updateTaskPriority").value="Low",updateTaskBackdrop.style.display="none",updateTaskModal.classList.remove("open-modal")}closeUpdateTask.addEventListener("click",closeUpdateTaskModalFunction),updateTaskBackdrop.addEventListener("click",closeUpdateTaskModalFunction);const updateTaskButton=document.querySelector("#updateTask");function handleUpdateTask(e){e.preventDefault();const t=document.querySelector("#updateTaskForm"),o=t.checkValidity();if(t.reportValidity(),o){let t=e.srcElement.dataset.taskindex;const o=document.querySelector("#updateTaskName").value,c=document.querySelector("#updateTaskDescription").value,a=document.querySelector("#updateTaskDueDate").value,r=document.querySelector("#updateTaskPriority").value;closeUpdateTaskModalFunction(),editTask(projectList[currentProjectIndex].projectTasks,t,o,c,a,r),localStorage.setItem("projectList",JSON.stringify(projectList)),renderTaskList()}}updateTaskButton.addEventListener("click",handleUpdateTask);